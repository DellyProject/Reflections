How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The diff showed the random error right next to the functional code in the previous version.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    This would allow me to undo what I want and see what worked in the past and catch where something went wrong.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: Changes are logical, meaningful. Can add notes to each commit!
	Cons: Need to form habit of committing after each logical change.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    In programming, there are often multiple files working together and logical changes 
	may include changes in multiple files. Repository is a group of these files. 
	Use git log --stat to see statistics for the commit data.
	
How can you use the commands git log and git diff to view the history of files?

    Git Log gives all of the commits that have happened and Git Diff gives the differences between commits.

How might using version control make you more confident to make changes that
could break something?

    If a change breaks something, I could always undo it and try again! If a silly mistake occurs then 
	it will be clear as an addition or deletion.

Now that you have your workspace set up, what do you want to try using Git for?

    Writing programs and adding in features, developing apps and discovering my potential!
